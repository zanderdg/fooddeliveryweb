{"version":3,"sources":["routes/protected-routes.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","screens/profile-screen/profile-component.js","routes/breadcrumb-view.js","screens/profile-screen/profile-container.js"],"names":["ProtectedRoute","Component","component","restOfProps","userInfo","useSelector","state","auth","render","props","to","toast","error","BreadcrumbItem","React","ref","bsPrefix","active","children","className","as","linkAs","LinkComponent","SafeAnchor","linkProps","href","title","target","prefix","useBootstrapPrefix","_jsx","classNames","undefined","displayName","defaultProps","Breadcrumb","listProps","label","Object","assign","Item","ProfileComponent","location","Loader","breadCrumbRoutes","Container","map","item","index","role","NavLink","url","pathname","fallback","path","UpdateInfoScreen","lazy","FavouriteDishesScreen","MyOrdersScreen","AllCustomersScreen","CreateFoodScreen","SpecificOrderScreen","ProfileContainer"],"mappings":"yKAsBeA,UAjBf,YAAmE,IAA9BC,EAA6B,EAAxCC,UAAyBC,EAAe,6BACxDC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA1CH,SACR,OACE,cAAC,IAAD,2BACMD,GADN,IAEEK,OAAQ,SAACC,GAAD,OACNL,EACE,cAACH,EAAD,eAAeQ,IAEf,cAAC,IAAD,CAAUC,GAAG,qBACbC,IAAMC,MAAM,mBAAqB,cAAC,IAAD,CAAUF,GAAG,0B,gHCNlDG,EAA8BC,cAAiB,WAalDC,GAAQ,IAZTC,EAYS,EAZTA,SACAC,EAWS,EAXTA,OACAC,EAUS,EAVTA,SACAC,EASS,EATTA,UASS,IAPTC,GAAInB,OAOK,MAPO,KAOP,MANToB,OAAQC,OAMC,MANeC,IAMf,EALTC,EAKS,EALTA,UACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,MACAC,EAES,EAFTA,OACGlB,EACM,8GACHmB,EAASC,YAAmBb,EAAU,mBAC5C,OAAoBc,cAAK7B,EAAD,YAAC,aACvBc,IAAKA,GACFN,GAFmB,IAGtBU,UAAWY,IAAWH,EAAQT,EAAW,CACvCF,WAEF,eAAgBA,EAAS,YAASe,EAClCd,SAAUD,EAASC,EAAwBY,cAAKR,EAAD,YAAC,eAAoBE,GAArB,IAC7CC,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRT,SAAUA,WAIhBL,EAAeoB,YAAc,iBAC7BpB,EAAeqB,aAnCM,CACnBjB,QAAQ,EACRO,UAAW,IAkCEX,QChCTsB,EAA0BrB,cAAiB,WAS9CC,GAAQ,IARTC,EAQS,EARTA,SACAG,EAOS,EAPTA,UACAiB,EAMS,EANTA,UACAlB,EAKS,EALTA,SACAmB,EAIS,EAJTA,MAIS,IAFTjB,GAAInB,OAEK,MAFO,MAEP,EADNQ,EACM,4EACHmB,EAASC,YAAmBb,EAAU,cAC5C,OAAoBc,cAAK7B,EAAD,YAAC,aACvB,aAAcoC,EACdlB,UAAWA,EACXJ,IAAKA,GACFN,GAJmB,IAKtBS,SAAuBY,cAAK,KAAD,YAAC,eAAWM,GAAZ,IACzBjB,UAAWY,IAAWH,EAAqB,MAAbQ,OAAoB,EAASA,EAAUjB,WACrED,SAAUA,WAIhBiB,EAAWF,YAAc,aACzBE,EAAWD,aA3BU,CACnBG,MAAO,aACPD,UAAW,IA0BEE,aAAOC,OAAOJ,EAAY,CACvCK,KAAM3B,I,yBCaO4B,EA1CU,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,iBAAkBxC,EAAe,EAAfA,SAC9D,OACE,8BACE,eAACyC,EAAA,EAAD,CAAW1B,UAAU,GAArB,UACE,wDACA,cAAC,EAAD,UACGyB,EAAiBE,KAAI,SAACC,EAAMC,GACiC,IAAD,EAA3D,MAAmB,UAAX,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAME,QAAuB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAME,QAAS7C,EAAS6C,KAEjD,cAAC,EAAWT,KAAZ,CAEEnB,OAAQ6B,UACR1B,UAAW,CAAEd,GAAIqC,EAAKI,KACtBlC,OAAQ8B,EAAKI,MAAQT,EAASU,SAJhC,mBAMGL,EAAKrB,aANR,QAMiB,IALVsB,GASF,UAIb,uBACA,cAAC,WAAD,CAAUK,SAAU,cAACV,EAAD,IAApB,SACE,cAAC,IAAD,UACGC,EAAiBE,KAAI,SAACC,EAAMC,GAC3B,OACE,cAAC,UAAD,CACEM,KAAMP,EAAKI,IACXjD,UAAW6C,EAAK7C,WACX8C,gB,gBCnCjBO,EAAmBC,gBAAK,kBAC5B,kCAGIC,EAAwBD,gBAAK,kBACjC,kCAKIE,EAAiBF,gBAAK,kBAC1B,iCAGIG,EAAqBH,gBAAK,kBAC9B,kCAGII,EAAmBJ,gBAAK,kBAC5B,kCAGIK,EAAsBL,gBAAK,kBAC/B,iCAOWZ,EAAmB,CAC9B,CACEO,IAAK,sCACLzB,MAAO,aACPxB,UAAWqD,EACXN,KAAM,QAER,CACEE,IAAK,6BACLzB,MAAO,YACPxB,UAAWwD,EACXT,KAAM,YAER,CACEE,IAAK,oCACLzB,MAAO,mBACPxB,UAAWuD,EACXR,KAAM,YAER,CACEE,IAAK,+BACLzB,MAAO,aACPxB,UAAW0D,EACXX,KAAM,SAER,CACEE,IAAK,8BACLzB,MAAO,aACPxB,UAhCoBsD,gBAAK,kBAC3B,kCAgCEP,KAAM,SAER,CACEE,IAAK,gCACLzB,MAAO,gBACPxB,UAAWyD,EACXV,KAAM,SAER,CACEE,IAAK,kCACLjD,UAAW2D,ICnDAC,UAbU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAClBtC,EAAaC,aAAY,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,QAA3CH,SAER,OACE,cAAC,EAAD,CACEsC,SAAUA,EACVC,OAAQA,IACRC,iBAAkBA,EAClBxC,SAAUA","file":"static/js/14.501aa961.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\r\n  const { userInfo } = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...restOfProps}\r\n      render={(props) =>\r\n        userInfo ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/v1/auth/signin\" /> &&\r\n          toast.error(\"please signin!\") && <Redirect to=\"/v1/auth/signin\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = SafeAnchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import React, { Suspense } from \"react\";\r\nimport { Breadcrumb, Container } from \"react-bootstrap\";\r\nimport { NavLink, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../routes/protected-routes\";\r\n\r\nconst ProfileComponent = ({ location, Loader, breadCrumbRoutes, userInfo }) => {\r\n  return (\r\n    <div>\r\n      <Container className=\"\">\r\n        <h1>MY Account Information</h1>\r\n        <Breadcrumb>\r\n          {breadCrumbRoutes.map((item, index) => {\r\n            if (item?.role === \"both\" || item?.role === userInfo.role) {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  key={index}\r\n                  linkAs={NavLink}\r\n                  linkProps={{ to: item.url }}\r\n                  active={item.url === location.pathname}\r\n                >\r\n                  {item.title ?? \"\"}\r\n                </Breadcrumb.Item>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </Breadcrumb>\r\n        <hr />\r\n        <Suspense fallback={<Loader />}>\r\n          <Switch>\r\n            {breadCrumbRoutes.map((item, index) => {\r\n              return (\r\n                <ProtectedRoute\r\n                  path={item.url}\r\n                  component={item.component}\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileComponent;\r\n","import { lazy } from \"react\";\r\nconst UpdateInfoScreen = lazy(() =>\r\n  import(\"../breadcrumb-screens/update-info-screen/update-info-container\")\r\n);\r\n\r\nconst FavouriteDishesScreen = lazy(() =>\r\n  import(\r\n    \"../breadcrumb-screens/favourite-dishes-screen/favourite-dishes-container\"\r\n  )\r\n);\r\n\r\nconst MyOrdersScreen = lazy(() =>\r\n  import(\"../breadcrumb-screens/my-orders/my-orders-container\")\r\n);\r\n\r\nconst AllCustomersScreen = lazy(() =>\r\n  import(\"../breadcrumb-screens/all-customers-screen/all-customers-container\")\r\n);\r\n\r\nconst CreateFoodScreen = lazy(() =>\r\n  import(\"../breadcrumb-screens/create-food-screen/create-food-container\")\r\n);\r\n\r\nconst SpecificOrderScreen = lazy(() =>\r\n  import(\"../breadcrumb-screens/specific-order-screen/specific-order-container\")\r\n);\r\n\r\nconst AllOrdersScreen = lazy(() =>\r\n  import(\"../breadcrumb-screens/all-orders-screen/all-orders-container\")\r\n);\r\n\r\nexport const breadCrumbRoutes = [\r\n  {\r\n    url: \"/v1/user/profile/update-information\",\r\n    title: \"My Profile\",\r\n    component: UpdateInfoScreen,\r\n    role: \"both\",\r\n  },\r\n  {\r\n    url: \"/v1/user/profile/my-orders\",\r\n    title: \"My Orders\",\r\n    component: MyOrdersScreen,\r\n    role: \"customer\",\r\n  },\r\n  {\r\n    url: \"/v1/user/profile/favourite-dishes\",\r\n    title: \"Favourite Dishes\",\r\n    component: FavouriteDishesScreen,\r\n    role: \"customer\",\r\n  },\r\n  {\r\n    url: \"/v1/user/profile/create-food\",\r\n    title: \"Add a Food\",\r\n    component: CreateFoodScreen,\r\n    role: \"admin\",\r\n  },\r\n  {\r\n    url: \"/v1/user/profile/all-orders\",\r\n    title: \"All Orders\",\r\n    component: AllOrdersScreen,\r\n    role: \"admin\",\r\n  },\r\n  {\r\n    url: \"/v1/user/profile/all-customer\",\r\n    title: \"All Customers\",\r\n    component: AllCustomersScreen,\r\n    role: \"admin\",\r\n  },\r\n  {\r\n    url: \"/v1/user/profile/order/:orderId\",\r\n    component: SpecificOrderScreen,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport ProfileComponent from \"./profile-component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport { breadCrumbRoutes } from \"../../routes/breadcrumb-view\";\r\n\r\nconst ProfileContainer = ({ location }) => {\r\n  const { userInfo } = useSelector((state) => state?.auth);\r\n\r\n  return (\r\n    <ProfileComponent\r\n      location={location}\r\n      Loader={Loader}\r\n      breadCrumbRoutes={breadCrumbRoutes}\r\n      userInfo={userInfo}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n"],"sourceRoot":""}