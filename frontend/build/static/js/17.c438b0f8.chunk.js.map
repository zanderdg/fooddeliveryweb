{"version":3,"sources":["screens/cart-screen/cart-component.js","screens/cart-screen/cart-container.js"],"names":["CartComponent","paymentMethod","cartItems","handleClearCart","handleRemoveFromCart","increaseQty","decreaseQty","handleCheckout","handleGoBack","onChangeAddress","onChangePaymentMethod","totalPrice","payStackProps","status","Container","Row","Col","md","className","Button","onClick","variant","map","item","index","Card","sm","Image","src","image","fluid","thumbnail","Title","name","price","qtyToBuy","xs","ListGroup","Item","length","Form","Group","controlId","Label","Control","type","placeholder","required","onChange","Select","value","disabled","Spinner","animation","CartContainer","history","dispatch","useDispatch","useSelector","state","cart","userInfo","auth","checkout","useState","address","setAddress","setPaymentMethod","Number","reduce","acc","toFixed","cartInfo","deliveryFee","foods","handlePayStackOnSuccess","a","checkoutRequest","res","data","unwrapResult","localStorage","removeItem","clearCart","toast","success","checkoutError","error","email","amount","publicKey","text","currency","channels","onSuccess","onClose","e","preventDefault","push","removeFromCart","goBack","target"],"mappings":"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","file":"static/js/17.c438b0f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { PaystackButton } from \"react-paystack\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Image,\r\n  Button,\r\n  ListGroup,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nconst CartComponent = ({\r\n  paymentMethod,\r\n  cartItems,\r\n  handleClearCart,\r\n  handleRemoveFromCart,\r\n  increaseQty,\r\n  decreaseQty,\r\n  handleCheckout,\r\n  handleGoBack,\r\n  onChangeAddress,\r\n  onChangePaymentMethod,\r\n  totalPrice,\r\n  payStackProps,\r\n  status,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col md={8} className=\"py-2\">\r\n            <Button onClick={handleClearCart} variant=\"outline-dark\">\r\n              <i className=\"fas fa-trash\"> Clear cart </i>\r\n            </Button>\r\n            {cartItems.map((item, index) => {\r\n              return (\r\n                <Card className=\"py-2 my-2\" key={index}>\r\n                  <Row>\r\n                    <Col sm={2} className=\"mt-2\">\r\n                      <Image src={item.image} fluid thumbnail />\r\n                    </Col>\r\n                    <Col sm={3} className=\"mt-2\">\r\n                      <Card.Title>{item.name}</Card.Title>\r\n                    </Col>\r\n                    <Col sm={2} className=\"mt-2\">\r\n                      Price: GH₵ <strong>{item.price}</strong>\r\n                    </Col>\r\n                    <Col sm={2} className=\"mt-2\">\r\n                      <Button\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => decreaseQty(item)}\r\n                      >\r\n                        <i className=\"fas fa-minus\"></i>\r\n                      </Button>{\" \"}\r\n                      {item.qtyToBuy}{\" \"}\r\n                      <Button\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => increaseQty(item)}\r\n                      >\r\n                        <i className=\"fas fa-plus\"></i>\r\n                      </Button>\r\n                    </Col>\r\n\r\n                    <Col xs={2} className=\"mt-2\">\r\n                      <Button\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => handleRemoveFromCart(item)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              );\r\n            })}\r\n          </Col>\r\n          <Col md={4} className=\"py-2\">\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>{cartItems.length} Food(s) In Cart</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>Delivery Fee : </strong>{\" \"}\r\n                  {cartItems.length === 0 ? `GH₵ 0` : `GH₵ 10`}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>Total Price : </strong>GH₵{\" \"}\r\n                  {cartItems.length === 0 ? ` 0` : totalPrice}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Form.Group\r\n                    className=\"mb-3\"\r\n                    controlId=\"formBasicdeliveryType\"\r\n                  >\r\n                    <Form.Label>Delivery Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"please enter accurate location\"\r\n                      required\r\n                      onChange={onChangeAddress}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Payment Method</Form.Label>\r\n                    <Form.Select onChange={onChangePaymentMethod}>\r\n                      <option>Select Payment Method</option>\r\n                      <option value=\"cashOnDelivery\">Cash On Delivery</option>\r\n                      <option value=\"mobileMoney\">Mobile Money</option>\r\n                      <option value=\"3\" disabled>\r\n                        Bank Transfer (Not Available Now)\r\n                      </option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"d-flex justify-content-between\">\r\n                    {paymentMethod === \"mobileMoney\" ? (\r\n                      <PaystackButton\r\n                        {...payStackProps}\r\n                        className=\"btn btn-dark\"\r\n                      />\r\n                    ) : (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        className=\"btn-block\"\r\n                        disabled={cartItems.length === 0}\r\n                        variant=\"dark\"\r\n                        onClick={handleCheckout}\r\n                      >\r\n                        {status === \"loading\" ? (\r\n                          <Spinner animation=\"border\" />\r\n                        ) : (\r\n                          <i className=\"fas fa-credit-card\"> Place Order </i>\r\n                        )}\r\n                      </Button>\r\n                    )}\r\n\r\n                    <Button\r\n                      className=\"btn-block\"\r\n                      variant=\"danger\"\r\n                      onClick={handleGoBack}\r\n                    >\r\n                      <i className=\"fas fa-arrow-left\"> Go Back </i>\r\n                    </Button>\r\n                  </Form.Group>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartComponent;\r\n","import React, { useState } from \"react\";\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CartComponent from \"./cart-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  clearCart,\r\n  increaseQty,\r\n  removeFromCart,\r\n  decreaseQty,\r\n} from \"../../redux/cart/cart-slice\";\r\nimport {\r\n  checkout,\r\n  checkoutError,\r\n  checkoutRequest,\r\n} from \"../../redux/checkout/checkout-slice\";\r\n\r\nconst CartContainer = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n  const { userInfo } = useSelector((state) => state.auth);\r\n  const { status } = useSelector((state) => state.checkout);\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n\r\n  const totalPrice = Number(\r\n    cartItems\r\n      .reduce((acc, item) => acc + item.qtyToBuy * item.price, 10)\r\n      .toFixed(2)\r\n  );\r\n\r\n  const handleClearCart = () => {\r\n    dispatch(clearCart());\r\n  };\r\n\r\n  const handleRemoveFromCart = (item) => {\r\n    dispatch(removeFromCart(item));\r\n  };\r\n\r\n  const handleIncreaseQty = (item) => {\r\n    dispatch(increaseQty(item));\r\n  };\r\n\r\n  const handleDecreaseQty = (item) => {\r\n    dispatch(decreaseQty(item));\r\n  };\r\n\r\n  const handleGoBack = () => history.goBack();\r\n\r\n  const onChangeAddress = (e) => setAddress(e.target.value);\r\n\r\n  const onChangePaymentMethod = (e) => setPaymentMethod(e.target.value);\r\n\r\n  const cartInfo = {\r\n    deliveryFee: 10,\r\n    address,\r\n    paymentMethod,\r\n    foods: cartItems,\r\n    totalPrice,\r\n  };\r\n\r\n  const handlePayStackOnSuccess = async () => {\r\n    const res = await dispatch(checkoutRequest(cartInfo));\r\n    const data = unwrapResult(res);\r\n    if (data.status === 201) {\r\n      dispatch(checkout(data));\r\n      localStorage.removeItem(\"cartItems\");\r\n      dispatch(clearCart());\r\n      toast.success(\"congrats!, great meal awaits you!\");\r\n    } else {\r\n      dispatch(checkoutError(data));\r\n      toast.error(\"sorry an unexpected occur!\");\r\n    }\r\n  };\r\n\r\n  const payStackProps = {\r\n    email: userInfo?.email,\r\n    amount: totalPrice * 100,\r\n    publicKey: \"pk_test_1f8a48067da5793e978f1b1d07e1feea71c756f3\",\r\n    text: `Pay GH₵  ${cartItems.length === 0 ? \"0\" : totalPrice}`,\r\n    currency: \"GHS\",\r\n    channels: [\"mobile_money\"],\r\n    onSuccess: (res) => handlePayStackOnSuccess(res),\r\n    onClose: () => toast.error('wait!! You Need This Flow, Don\"t Go!!!!!!'),\r\n  };\r\n\r\n  const handleCheckout = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!userInfo) {\r\n      history.push(\"/v1/auth/signin\");\r\n      toast.error(\"please signin\");\r\n    } else {\r\n      if (paymentMethod === \"\" || address === \"\") {\r\n        toast.error(\"Select Payment Method And Enter Address\");\r\n      } else {\r\n        const res = await dispatch(checkoutRequest(cartInfo));\r\n        const data = unwrapResult(res);\r\n        if (data.status === 201) {\r\n          dispatch(checkout(data));\r\n          localStorage.removeItem(\"cartItems\");\r\n          dispatch(clearCart());\r\n          toast.success(\"congrats!, great meal awaits you!\");\r\n        } else {\r\n          dispatch(checkoutError(data));\r\n          toast.error(\"sorry an unexpected occur!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <CartComponent\r\n      cartItems={cartItems}\r\n      handleClearCart={handleClearCart}\r\n      handleRemoveFromCart={handleRemoveFromCart}\r\n      increaseQty={handleIncreaseQty}\r\n      decreaseQty={handleDecreaseQty}\r\n      handleCheckout={handleCheckout}\r\n      handleGoBack={handleGoBack}\r\n      onChangeAddress={onChangeAddress}\r\n      onChangePaymentMethod={onChangePaymentMethod}\r\n      paymentMethod={paymentMethod}\r\n      totalPrice={totalPrice}\r\n      payStackProps={payStackProps}\r\n      status={status}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CartContainer;\r\n"],"sourceRoot":""}